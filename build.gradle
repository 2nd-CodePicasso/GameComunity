plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.2'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

bootRun {
    jvmArgs = ["-Djava.net.preferIPv4Stack=true"]
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
    maven { url 'https://plugins.gradle.org/m2/' }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.mysql:mysql-connector-j'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    //웹소켓, 스톰프
    implementation 'org.springframework.boot:spring-boot-starter-websocket'

    //이모티콘
    implementation 'com.vdurmont:emoji-java:5.1.1'

    //jwt
    compileOnly group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.11.5'
    runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.11.5'
    runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.11.5'

    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

    implementation 'at.favre.lib:bcrypt:0.10.2'

    //Redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    //Redis - Redisson
    implementation 'org.redisson:redisson-spring-boot-starter:3.21.1'

    //타임리프
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'

    //스프링시큐리티
    implementation 'org.springframework.boot:spring-boot-starter-security'

    //AWS S3
    implementation 'software.amazon.awssdk:s3:2.20.20'

    //Query DSL
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor 'com.querydsl:querydsl-apt:5.0.0:jakarta'
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"




    // RabbitMQ
 //   implementation 'org.springframework.boot:spring-boot-starter-amqp'

}

// queryDSL 시작
def generated = file('build/generated/querydsl')

tasks.withType(JavaCompile).configureEach {
    options.getGeneratedSourceOutputDirectory().set(generated)
}

sourceSets {
    main {
        java {
            srcDirs = ['src/main/java', 'build/generated/querydsl']
        }
    }
}

clean {
    delete generated
}
// queryDSL 종료
tasks.named('test') {
    useJUnitPlatform()
}
